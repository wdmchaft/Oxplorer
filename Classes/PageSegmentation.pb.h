// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ProtocolBuffers.h"

@class Page;
@class Page_Builder;
@class Page_Segment;
@class Page_Segment_Builder;
@class Page_Segment_Ocr;
@class Page_Segment_Ocr_Builder;

@interface PageSegmentationRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

@interface Page : PBGeneratedMessage {
@private
  BOOL hasImageWidth_:1;
  BOOL hasImageHeight_:1;
  BOOL hasImageXres_:1;
  BOOL hasImageYres_:1;
  BOOL hasPageId_:1;
  Float32 imageWidth;
  Float32 imageHeight;
  Float32 imageXres;
  Float32 imageYres;
  int32_t pageId;
  NSMutableArray* mutableSegmentList;
}
- (BOOL) hasPageId;
- (BOOL) hasImageWidth;
- (BOOL) hasImageHeight;
- (BOOL) hasImageXres;
- (BOOL) hasImageYres;
@property (readonly) int32_t pageId;
@property (readonly) Float32 imageWidth;
@property (readonly) Float32 imageHeight;
@property (readonly) Float32 imageXres;
@property (readonly) Float32 imageYres;
- (NSArray*) segmentList;
- (Page_Segment*) segmentAtIndex:(int32_t) index;

+ (Page*) defaultInstance;
- (Page*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Page_Builder*) builder;
+ (Page_Builder*) builder;
+ (Page_Builder*) builderWithPrototype:(Page*) prototype;

+ (Page*) parseFromData:(NSData*) data;
+ (Page*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Page*) parseFromInputStream:(NSInputStream*) input;
+ (Page*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Page*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Page*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Page_Segment : PBGeneratedMessage {
@private
  BOOL hasX_:1;
  BOOL hasY_:1;
  BOOL hasW_:1;
  BOOL hasH_:1;
  BOOL hasId_:1;
  Float32 x;
  Float32 y;
  Float32 w;
  Float32 h;
  int32_t id;
  NSMutableArray* mutableOcrList;
}
- (BOOL) hasId;
- (BOOL) hasX;
- (BOOL) hasY;
- (BOOL) hasW;
- (BOOL) hasH;
@property (readonly) int32_t id;
@property (readonly) Float32 x;
@property (readonly) Float32 y;
@property (readonly) Float32 w;
@property (readonly) Float32 h;
- (NSArray*) ocrList;
- (Page_Segment_Ocr*) ocrAtIndex:(int32_t) index;

+ (Page_Segment*) defaultInstance;
- (Page_Segment*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Page_Segment_Builder*) builder;
+ (Page_Segment_Builder*) builder;
+ (Page_Segment_Builder*) builderWithPrototype:(Page_Segment*) prototype;

+ (Page_Segment*) parseFromData:(NSData*) data;
+ (Page_Segment*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Page_Segment*) parseFromInputStream:(NSInputStream*) input;
+ (Page_Segment*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Page_Segment*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Page_Segment*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Page_Segment_Ocr : PBGeneratedMessage {
@private
  BOOL hasClassifierId_:1;
  BOOL hasOcrString_:1;
  BOOL hasScore_:1;
  NSString* classifierId;
  NSString* ocrString;
  NSString* score;
}
- (BOOL) hasClassifierId;
- (BOOL) hasOcrString;
- (BOOL) hasScore;
@property (readonly, retain) NSString* classifierId;
@property (readonly, retain) NSString* ocrString;
@property (readonly, retain) NSString* score;

+ (Page_Segment_Ocr*) defaultInstance;
- (Page_Segment_Ocr*) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (Page_Segment_Ocr_Builder*) builder;
+ (Page_Segment_Ocr_Builder*) builder;
+ (Page_Segment_Ocr_Builder*) builderWithPrototype:(Page_Segment_Ocr*) prototype;

+ (Page_Segment_Ocr*) parseFromData:(NSData*) data;
+ (Page_Segment_Ocr*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Page_Segment_Ocr*) parseFromInputStream:(NSInputStream*) input;
+ (Page_Segment_Ocr*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (Page_Segment_Ocr*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (Page_Segment_Ocr*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface Page_Segment_Ocr_Builder : PBGeneratedMessage_Builder {
@private
  Page_Segment_Ocr* result;
}

- (Page_Segment_Ocr*) defaultInstance;

- (Page_Segment_Ocr_Builder*) clear;
- (Page_Segment_Ocr_Builder*) clone;

- (Page_Segment_Ocr*) build;
- (Page_Segment_Ocr*) buildPartial;

- (Page_Segment_Ocr_Builder*) mergeFrom:(Page_Segment_Ocr*) other;
- (Page_Segment_Ocr_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Page_Segment_Ocr_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasClassifierId;
- (NSString*) classifierId;
- (Page_Segment_Ocr_Builder*) setClassifierId:(NSString*) value;
- (Page_Segment_Ocr_Builder*) clearClassifierId;

- (BOOL) hasOcrString;
- (NSString*) ocrString;
- (Page_Segment_Ocr_Builder*) setOcrString:(NSString*) value;
- (Page_Segment_Ocr_Builder*) clearOcrString;

- (BOOL) hasScore;
- (NSString*) score;
- (Page_Segment_Ocr_Builder*) setScore:(NSString*) value;
- (Page_Segment_Ocr_Builder*) clearScore;
@end

@interface Page_Segment_Builder : PBGeneratedMessage_Builder {
@private
  Page_Segment* result;
}

- (Page_Segment*) defaultInstance;

- (Page_Segment_Builder*) clear;
- (Page_Segment_Builder*) clone;

- (Page_Segment*) build;
- (Page_Segment*) buildPartial;

- (Page_Segment_Builder*) mergeFrom:(Page_Segment*) other;
- (Page_Segment_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Page_Segment_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (int32_t) id;
- (Page_Segment_Builder*) setId:(int32_t) value;
- (Page_Segment_Builder*) clearId;

- (BOOL) hasX;
- (Float32) x;
- (Page_Segment_Builder*) setX:(Float32) value;
- (Page_Segment_Builder*) clearX;

- (BOOL) hasY;
- (Float32) y;
- (Page_Segment_Builder*) setY:(Float32) value;
- (Page_Segment_Builder*) clearY;

- (BOOL) hasW;
- (Float32) w;
- (Page_Segment_Builder*) setW:(Float32) value;
- (Page_Segment_Builder*) clearW;

- (BOOL) hasH;
- (Float32) h;
- (Page_Segment_Builder*) setH:(Float32) value;
- (Page_Segment_Builder*) clearH;

- (NSArray*) ocrList;
- (Page_Segment_Ocr*) ocrAtIndex:(int32_t) index;
- (Page_Segment_Builder*) replaceOcrAtIndex:(int32_t) index with:(Page_Segment_Ocr*) value;
- (Page_Segment_Builder*) addOcr:(Page_Segment_Ocr*) value;
- (Page_Segment_Builder*) addAllOcr:(NSArray*) values;
- (Page_Segment_Builder*) clearOcrList;
@end

@interface Page_Builder : PBGeneratedMessage_Builder {
@private
  Page* result;
}

- (Page*) defaultInstance;

- (Page_Builder*) clear;
- (Page_Builder*) clone;

- (Page*) build;
- (Page*) buildPartial;

- (Page_Builder*) mergeFrom:(Page*) other;
- (Page_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (Page_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPageId;
- (int32_t) pageId;
- (Page_Builder*) setPageId:(int32_t) value;
- (Page_Builder*) clearPageId;

- (BOOL) hasImageWidth;
- (Float32) imageWidth;
- (Page_Builder*) setImageWidth:(Float32) value;
- (Page_Builder*) clearImageWidth;

- (BOOL) hasImageHeight;
- (Float32) imageHeight;
- (Page_Builder*) setImageHeight:(Float32) value;
- (Page_Builder*) clearImageHeight;

- (BOOL) hasImageXres;
- (Float32) imageXres;
- (Page_Builder*) setImageXres:(Float32) value;
- (Page_Builder*) clearImageXres;

- (BOOL) hasImageYres;
- (Float32) imageYres;
- (Page_Builder*) setImageYres:(Float32) value;
- (Page_Builder*) clearImageYres;

- (NSArray*) segmentList;
- (Page_Segment*) segmentAtIndex:(int32_t) index;
- (Page_Builder*) replaceSegmentAtIndex:(int32_t) index with:(Page_Segment*) value;
- (Page_Builder*) addSegment:(Page_Segment*) value;
- (Page_Builder*) addAllSegment:(NSArray*) values;
- (Page_Builder*) clearSegmentList;
@end

